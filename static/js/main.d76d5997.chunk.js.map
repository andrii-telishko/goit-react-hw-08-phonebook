{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/auth/authActions.js","redux/auth/authReducer.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/store.js","components/Container/Container.js","components/Navigation/Navigations.js","components/AuthNav/AuthNav.js","components/UserMenu/defaultAvatar.jpg","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsActions","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","contactsFormReducer","createReducer","_","payload","state","filter","id","filterReducer","loadingReducer","contactsReducer","combineReducers","contacts","loading","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","isAuthenticated","headers","common","Authorization","register","credentials","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","getIsAuthenticated","getUsername","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","Container","children","className","connect","authSelectors","to","exact","activeClassName","AuthNav","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","src","alt","width","type","onClick","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d76d5997.chunk.js","sourcesContent":["\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('phonebook/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('phonebook/addContactRequest');\r\nconst addContactSuccess = createAction('phonebook/addContactSuccess');\r\nconst addContactError = createAction('phonebook/addContactError');\r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nconst deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport default { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter };","import axios from 'axios';\r\nimport { contactsActions } from './'\r\n\r\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } = contactsActions;\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios.get('/contacts').then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios.post('/contacts', contact).then(({ data }) =>\r\n        dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact }","import { createReducer, combineReducers } from '@reduxjs/toolkit'\r\nimport { contactsActions } from './';\r\n\r\nconst { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } = contactsActions;\r\n\r\nconst contactsFormReducer = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n    contacts: contactsFormReducer,\r\n    filter: filterReducer,\r\n    loading: loadingReducer\r\n});\r\n\r\nexport default contactsReducer;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    axios.post('/users/signup', credentials).then(({ data }) => {\r\n        token.set(data.token)\r\n        dispatch(authActions.registerSuccess(data))\r\n    }).catch(({ message }) =>\r\n        dispatch(authActions.registerError(message)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    axios.post('/users/login', credentials).then(({ data }) => {\r\n        token.set(data.token)\r\n        dispatch(authActions.loginSuccess(data))\r\n    }).catch(({ message }) =>\r\n        dispatch(authActions.loginError(message)));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    axios.post('/users/logout').then(() => {\r\n        token.unset()\r\n        dispatch(authActions.logoutSuccess())\r\n    }).catch(({ message }) =>\r\n        dispatch(authActions.logoutError(message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    axios.get('/users/current').then(({ data }) => {\r\n        dispatch(authActions.getCurrentUserSuccess(data))\r\n    }).catch(({ message }) =>\r\n        dispatch(authActions.getCurrentUserError(message)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n};","import { configureStore, getDefaultMiddleware, } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    })\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport './Navigation.scss'\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink to=\"/\"\r\n            exact\r\n            className='nav-link'\r\n            activeClassName='nav-link__active'>\r\n            Main\r\n        </NavLink>\r\n\r\n\r\n        {isAuthenticated && (<NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            className='nav-link'\r\n            activeClassName='nav-link__active'>\r\n            Contacts\r\n        </NavLink>)}\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../Navigation/Navigation.scss'\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            className='nav-link'\r\n            activeClassName='nav-link__active'\r\n        >\r\n            Registration\r\n        </NavLink>\r\n        <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            className='nav-link'\r\n            activeClassName='nav-link__active'\r\n        >\r\n            Log In\r\n        </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/defaultAvatar.12e39dc7.jpg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './defaultAvatar.jpg';\r\nimport './UserMenu.scss'\r\n\r\n\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div className='user-container'>\r\n        <img src={avatar} alt=\"\" width=\"32\" className='user-avatar' />\r\n        <span className='user-name'>Welcome, {name}</span>\r\n        <button type=\"button\" onClick={onLogout} className='user-btn'>\r\n            Logout\r\n        </button>\r\n    </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUsername(state),\r\n    avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './AppBar.scss'\r\nimport Navigation from '../Navigation'\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { authSelectors } from '../../redux/auth'\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header className='app-header'>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Container from './components/Container'\nimport AppBar from './components/AppBar'\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport { authOperations } from './redux/auth'\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<h3>Loading...</h3>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container >\n    );\n  };\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}